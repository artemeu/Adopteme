paths:
  /api/users:
    get:
      summary: 'Obtener todos los usuarios'
      description: 'Obtiene una lista de todos los usuarios registrados.'
      tags:
        - Users
      responses:
        '200':
          description: 'Lista de usuarios obtenida exitosamente'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud'
                    example: 'success'
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '500':
          description: 'Error al obtener los usuarios'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Failed to retrieve users'

    delete:
      summary: 'Eliminar todos los usuarios'
      description: 'Elimina todos los usuarios del sistema.'
      tags:
        - Users
      responses:
        '200':
          description: 'Usuarios eliminados con éxito'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud'
                    example: 'success'
                  message:
                    type: string
                    description: 'Mensaje de confirmación'
                    example: 'All users records deleted'
        '500':
          description: 'Error al eliminar los usuarios'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Failed to delete user'

  /api/users/{uid}:
    get:
      summary: 'Obtener un usuario por ID'
      description: 'Obtiene un usuario específico mediante su ID.'
      tags:
        - Users
      parameters:
        - name: 'uid'
          in: 'path'
          required: true
          description: 'ID del usuario'
          schema:
            type: string
      responses:
        '200':
          description: 'Detalles del usuario obtenidos con éxito'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud'
                    example: 'success'
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'User not found'
        '500':
          description: 'Error al obtener el usuario'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Failed to retrieve user'

    put:
      summary: 'Actualizar un usuario'
      description: 'Actualiza los datos de un usuario específico.'
      tags:
        - Users
      parameters:
        - name: 'uid'
          in: 'path'
          required: true
          description: 'ID del usuario'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateUser'
      responses:
        '200':
          description: 'Usuario actualizado correctamente'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud'
                    example: 'success'
                  message:
                    type: string
                    description: 'Mensaje de confirmación'
                    example: 'User updated'
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'User not found'
        '500':
          description: 'Error al actualizar el usuario'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Failed to update user'

    delete:
      summary: 'Eliminar un usuario'
      description: 'Elimina un usuario específico mediante su ID.'
      tags:
        - Users
      parameters:
        - name: 'uid'
          in: 'path'
          required: true
          description: 'ID del usuario'
          schema:
            type: string
      responses:
        '200':
          description: 'Usuario eliminado con éxito'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'Estado de la solicitud'
                    example: 'success'
                  message:
                    type: string
                    description: 'Mensaje de confirmación'
                    example: 'User deleted'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'User not found'
        '500':
          description: 'Error al eliminar el usuario'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Failed to delete user'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: 'ID único del usuario (ObjectId de MongoDB)'
        first_name:
          type: string
          description: 'Nombre del usuario'
        last_name:
          type: string
          description: 'Apellido del usuario'
        email:
          type: string
          description: 'Correo electrónico del usuario'
        password:
          type: string
          description: 'Contraseña del usuario Hasheada'
        role:
          type: string
          description: 'Rol del usuario'
          default: 'user'
        pets:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                description: 'ID de la mascota (ObjectId de MongoDB)'
          default: []
      example:
        _id: '625b0bda8d5f5e4d582d8d1d'
        first_name: 'Jorge'
        last_name: 'Rodriguez'
        email: 'jorge@gmail.com'
        password: 'Contraseña Hasheada'
        role: 'user'
        pets:
          - _id: '625b0bda8d5f5e4d582d8d1d'
          - _id: '625b0bda8d5f5e4d582d8d2e'

  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: correo del usuario
        password:
          type: string
          description: contraseña
        role:
          type: string
          description: rol del usuario
      example:
        first_name: 'Mauricio'
        last_name: 'Espinosa'
        email: 'mauriCrack@correo.com'
        password: 'new_password_example'
