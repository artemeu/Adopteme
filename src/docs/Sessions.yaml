paths:
  /api/sessions/register:
    post:
      summary: 'Registrar un nuevo usuario'
      description: 'Crea una nueva cuenta de usuario en el sistema.'
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            $ref: '#/components/requestBodies/Register'
      responses:
        '200':
          description: 'Usuario registrado exitosamente'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  payload:
                    type: string
                    description: 'ID del usuario registrado'
                    example: '60b8d295ba7b3e001c9e8c1c'
        '400':
          description: 'Valores incompletos'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Incomplete values'
        '409':
          description: 'El correo electrónico ya está en uso'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Email already exists'
        '500':
          description: 'Error al registrar al usuario'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Failed to create user'

  /api/sessions/login:
    post:
      summary: 'Iniciar sesión'
      description: 'Inicia sesión con el correo electrónico y la contraseña del usuario.'
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            $ref: '#/components/requestBodies/Login'
      responses:
        '200':
          description: 'Inicio de sesión exitoso'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Logged in'
        '400':
          description: 'Valores incompletos'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Incomplete values'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'User not found'
        '401':
          description: 'Contraseña inválida'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Incorrect password'
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Internal server error'

  /api/sessions/current:
    get:
      summary: 'Obtener información del usuario actual'
      description: 'Devuelve los datos del usuario actual autenticado mediante la cookie.'
      tags:
        - Sessions
      responses:
        '200':
          description: 'Datos del usuario actual obtenidos exitosamente'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  payload:
                    $ref: '#/components/schemas/Session'
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: 'Sesión expirada'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Session has expired'

  /api/sessions/unprotectedLogin:
    post:
      summary: 'Iniciar sesión sin protección'
      description: 'Inicia sesión sin verificar autenticación en sesiones protegidas.'
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            $ref: '#/components/requestBodies/Login'
      responses:
        '200':
          description: 'Inicio de sesión sin protección exitoso'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Unprotected Logged in'
        '400':
          description: 'Valores incompletos'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Incomplete values'
        '404':
          description: 'Usuario no encontrado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'User not found'
        '401':
          description: 'Contraseña inválida'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Incorrect password'
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Internal server error'

  /api/sessions/unprotectedCurrent:
    get:
      summary: 'Obtener información del usuario sin protección'
      description: 'Devuelve los datos del usuario sin protección.'
      tags:
        - Sessions
      responses:
        '200':
          description: 'Datos del usuario sin protección obtenidos exitosamente'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  payload:
                    $ref: '#/components/schemas/Session'
        '401':
          description: 'No autorizado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: 'Sesión expirada'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  error:
                    type: string
                    example: 'Session has expired'

components:
  schemas:
    Session:
      type: object
      properties:
        name:
          type: string
          description: 'Nombre completo del usuario'
          example: 'Carlos Gomez'
        role:
          type: string
          description: 'Rol del usuario'
          example: 'user'
        email:
          type: string
          description: 'Correo electrónico del usuario'
          example: 'carlos@gmail.com'
        iat:
          type: integer
          description: 'Fecha de emisión del token (timestamp UNIX)'
          example: 1732320548
        exp:
          type: integer
          description: 'Fecha de expiración del token (timestamp UNIX)'
          example: 1732324148
      example:
        name: 'Carlos Gomez'
        role: 'user'
        email: 'carlos@gmail.com'
        iat: 1732320548
        exp: 1732324148

  requestBodies:
    Register:
      type: object
      properties:
        first_name:
          type: string
          description: 'Nombre del usuario'
        last_name:
          type: string
          description: 'Apellido del usuario'
        email:
          type: string
          description: 'Correo electrónico del usuario'
        password:
          type: string
          description: 'Contraseña del usuario'
      example:
        first_name: 'Carlos'
        last_name: 'Pérez'
        email: 'carlos@example.com'
        password: '1234'

    Login:
      type: object
      properties:
        email:
          type: string
          description: 'Correo electrónico del usuario'
        password:
          type: string
          description: 'Contraseña del usuario'
      example:
        email: 'carlos@example.com'
        password: '1234'
